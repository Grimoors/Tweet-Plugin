{"id":"RINv","dependencies":[{"name":"C:\\Users\\user\\Documents\\GitHub\\Tweet-Plugin\\package.json","includedInParent":true,"mtime":1681685714954},{"name":"C:\\Users\\user\\Documents\\GitHub\\Tweet-Plugin\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1681673275020}],"generated":{"js":"\"use strict\";function e(e,t){return t(e),e}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=e;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/underscore/modules/tap.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/underscore/modules/tap.js","original":{"line":4,"column":15},"generated":{"line":1,"column":13}},{"source":"node_modules/underscore/modules/tap.js","name":"tap","original":{"line":4,"column":24},"generated":{"line":1,"column":22}},{"source":"node_modules/underscore/modules/tap.js","name":"obj","original":{"line":4,"column":28},"generated":{"line":1,"column":24}},{"source":"node_modules/underscore/modules/tap.js","name":"interceptor","original":{"line":4,"column":33},"generated":{"line":1,"column":26}},{"source":"node_modules/underscore/modules/tap.js","original":{"line":6,"column":2},"generated":{"line":1,"column":29}},{"source":"node_modules/underscore/modules/tap.js","name":"interceptor","original":{"line":5,"column":2},"generated":{"line":1,"column":36}},{"source":"node_modules/underscore/modules/tap.js","name":"obj","original":{"line":5,"column":14},"generated":{"line":1,"column":38}},{"source":"node_modules/underscore/modules/tap.js","name":"obj","original":{"line":6,"column":9},"generated":{"line":1,"column":41}},{"source":"node_modules/underscore/modules/tap.js","original":{"line":7,"column":0},"generated":{"line":1,"column":43}},{"source":"node_modules/underscore/modules/tap.js","original":{"line":7,"column":0},"generated":{"line":1,"column":50}},{"source":"node_modules/underscore/modules/tap.js","original":{"line":7,"column":0},"generated":{"line":1,"column":65}},{"source":"node_modules/underscore/modules/tap.js","original":{"line":7,"column":0},"generated":{"line":1,"column":73}},{"source":"node_modules/underscore/modules/tap.js","original":{"line":7,"column":0},"generated":{"line":1,"column":86}},{"source":"node_modules/underscore/modules/tap.js","original":{"line":7,"column":0},"generated":{"line":1,"column":87}},{"source":"node_modules/underscore/modules/tap.js","original":{"line":7,"column":0},"generated":{"line":1,"column":94}},{"source":"node_modules/underscore/modules/tap.js","original":{"line":7,"column":0},"generated":{"line":1,"column":98}},{"source":"node_modules/underscore/modules/tap.js","original":{"line":7,"column":0},"generated":{"line":1,"column":106}},{"source":"node_modules/underscore/modules/tap.js","original":{"line":7,"column":0},"generated":{"line":1,"column":114}}],"sources":{"node_modules/underscore/modules/tap.js":"// Invokes `interceptor` with the `obj` and then returns `obj`.\r\n// The primary purpose of this method is to \"tap into\" a method chain, in\r\n// order to perform operations on intermediate results within the chain.\r\nexport default function tap(obj, interceptor) {\r\n  interceptor(obj);\r\n  return obj;\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"7c81f48e4c092a56dee0c9bf29a2621c","cacheData":{"env":{}}}